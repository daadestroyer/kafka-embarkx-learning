#spring:
#  application:
#    name: consumer
#  # kafka stream consumer location
#  cloud:
#    stream:
#      function:
#        definition: processRiderLocation
#      bindings:
#        processRiderLocation-in-0: # in means, we are receiving message
#          destination: my-topic-new
#          content-type: application/json
#      kafka:
#        bindings:
#          processRiderLocation-in-0:
#            consumer:
#              valueSerde: org.springframework.kafka.support.serializer.JsonSerde
#    kafka:
#      binder:
#        brokers: localhost:9092
#  kafka:
#    consumer:
#      bootstrap-servers: localhost:9092
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      properties:
#        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
#        spring.json.trusted.packages: "*"
#        spring.json.value.default.type: com.thecoderstv.embarx_consumer.RiderLocation
#
#server:
#  port: 8082


spring:
  application:
    name: consumer

  cloud:
    stream:
      function:
        definition: processRiderLocation
      bindings:
        processRiderLocation-in-0:
          destination: my-topic-new
          content-type: application/json
      kafka:
        bindings:
          processRiderLocation-in-0:
            consumer:
              valueSerde: org.springframework.kafka.support.serializer.JsonSerde
        binder:
          brokers: localhost:9092

server:
  port: 8082